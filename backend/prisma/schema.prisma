generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  user_id    BigInt   @id @default(autoincrement())
  email      String   @unique @db.VarChar(100)
  password   String   @db.VarChar(100)
  firstname  String   @db.VarChar(100)
  lastname   String?  @db.VarChar(100)
  currency_id Int
  fk_currency Currencies @relation(fields: [currency_id], references: [currency_id])
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  groups     Groups[]
  expenses   Expenses[]
  expense_shares ExpenseShares[]
  @@map("users")
}

model Groups {
  group_id   BigInt    @id @default(autoincrement())
  group_type Int
  fk_grouptype  GroupTypes @relation(fields: [group_type], references: [group_type_id])
  group_name String    @db.VarChar(100)
  created_by BigInt
  fk_user       Users     @relation(fields: [created_by], references: [user_id])
  status Status @default(ACTIVE)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  expenses Expenses[]
  @@map("groups")
}

model GroupTypes {
  group_type_id   Int      @id @default(autoincrement())
  group_type_name String   @unique @db.VarChar(100)
  groups          Groups[]
  @@map("group_types")
}

model Currencies {
  currency_id Int @id@default(autoincrement())
  currency_name String @unique @db.VarChar(200)
  symbol String @db.VarChar(100)
  code String @unique @db.VarChar(100)
  users Users[]
  @@map("currencies")
}

enum Status {
  ACTIVE
  DELETED
}

model Expenses {
  expense_id BigInt   @id @default(autoincrement())
  expense_name String @db.VarChar(200)
  expense_status String @db.VarChar(20)
  group_id BigInt
  fk_group Groups @relation(fields:[group_id], references: [group_id])
  //add relation here
  amount Int
  currency_id Int
  //add relation here
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  expense_date DateTime @default(now()) @db.Timestamptz(6)
  created_by  BigInt
  fk_user Users @relation(fields: [created_by],references: [user_id])
  is_settled Boolean
  description String? @db.VarChar(300)
  expense_shares ExpenseShares[]
  @@map("expenses")
}

model ExpenseShares{
  expense_id BigInt   
  fk_expense Expenses @relation(fields:[expense_id],references:[expense_id])
  user_id BigInt      
  fk_user Users @relation(fields:[user_id],references: [user_id])
  @@id([expense_id,user_id])
  @@map("expense_shares")
}